---
- name: Deploy the Machine Learning Workshop to a target cluster
  hosts: localhost

  tasks:

  - name: Set preflight facts for current working directory
    set_fact:
      cwd: "{{ playbook_dir.split('/') }}"

  - name: Set preflight facts for roles
    set_fact:
      nu_roles_path: "{{ cwd[:-1] | join('/') }}/roles"
  
  - name: Include shared vars
    include_vars: vars.yaml

  - name: Scope RHOE AWS Environment
    include_role:
      name: "{{ nu_roles_path }}/scope-rhoe-aws"

  - name: Scope Bastion information
    include_role:
      name: "{{ nu_roles_path }}/find-bastion-rhoe-aws"

  - name: Add Bastion host to inventory
    add_host:
      hostname: '{{ bastion_info.public_ip }}'
      public_ip: '{{ bastion_info.public_ip }}'
      groups:
      - bastion
      ansible_user: ec2-user
      ansible_connection: ssh
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      ansible_python_interpreter: "/usr/libexec/platform-python"
      aws_guid_public_zone_name: "{{ aws_guid_public_zone_name }}"
      rhoe_email_owner: "{{ rhoe_email_owner }}"

- name: Connect to the Bastion and deploy the workshop
  hosts: bastion
  become: yes
  gather_facts: true

  environment:
    K8S_AUTH_KUBECONFIG: /opt/ocp4-cluster/auth/kubeconfig
    KUBECONFIG: /opt/ocp4-cluster/auth/kubeconfig

  tasks:
  
  - name: Include shared vars
    include_vars: vars.yaml
  
  - name: Check for an openshift cluster configuration
    ansible.builtin.stat:
      path: /opt/ocp4-cluster/auth/kubeconfig
    register: kubeconfig_file

  - name: Continue to deploy workload
    block:

    - name: Clone down agnosticd
      ansible.builtin.git:
        repo: "{{ agnosticd_repo }}"
        dest: "/opt/agnosticd"
        clone: yes
        update: yes
        version: "{{ agnosticd_branch }}"

    - name: Create playbook bootstrap
      copy:
        dest: /opt/agnosticd/ansible/roles/ocp4-workload-machinelearning/deploy.yml
        content: |
          ---
          - name: Deploy the Machine Learning Workshop to a target cluster
            hosts: localhost
            tasks:

            - name: Kick things off
              include_tasks: tasks/main.yml

    - name: Install Ansible Collections
      shell: "ansible-galaxy collection install {{ collection_item }}"
      loop_control:
        loop_var: collection_item
      loop:
      - community.kubernetes
      - community.okd

    - name: Run the deployer
      shell: >
        ansible-playbook
        -e "silent={{ silent }}"
        -e "become_override={{ become_override }}"
        -e "ACTION={{ ACTION }}"
        -e "num_users={{ num_users }}"
        -e "ocp_username={{ ocp_username }}"
        -e "workshop_openshift_user_name={{ workshop_openshift_user_name }}"
        -e "workshop_openshift_user_password={{ workshop_openshift_user_password }}"
        -e "workshop_openshift_admin_password={{ workshop_openshift_admin_password }}"
        -e "repo_owner={{ repo_owner }}"
        -e "repo={{ repo }}"
        -e "deploy_demo={{ deploy_demo }}"
        -e "demo_ml_project_namespace={{ demo_ml_project_namespace }}"
        -e "demo_ml_wait_for_service_build={{ demo_ml_wait_for_service_build }}"
        -e "demo_ml_run_new_builds_if_already_built={{ demo_ml_run_new_builds_if_already_built }}"
        -e "guides_url={{ guides_url }}"
        -e "labs_url={{ labs_url }}"
        -e "aws_region={{ aws_region }}"
        -e "agnosticd_branch={{ agnosticd_branch }}"
        -e "agnosticd_url={{ agnosticd_url }}"
        -e "agnosticd_repo={{ agnosticd_repo }}"
        /opt/agnosticd/ansible/roles/ocp4-workload-machinelearning/deploy.yml
    when: kubeconfig_file.stat.exists