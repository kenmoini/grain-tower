---
# This playbook is the new entrypoint into the automation workflows
# It assumes that as many of these workloads do, locally doing some fact gathering
# and then a bit of infrastructure creation, then configuration of those infrastructure components

- name: Deploy Grain Tower Workloads
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    action: deploy # deploy or destroy
    bastion_hostname: gt-bastion
    aws_region: us-east-2

  tasks:

    - name: Scope RHOE AWS Environment
      ansible.builtin.include_role:
        name: "scope-rhoe-aws"

# ============================================================
# Per-Workload Infrastructure Creation
# ============================================================

    - name: Create RHOE AWS Infrastructure for different workloads
      block:

        - name: RHOE - EC2 - IDM | AWS Infrastructure
          when: (deploy_rh_idm is defined) and deploy_rh_idm | bool
          ansible.builtin.include_role:
            name: "rhoe-ec2-idm"
            apply:
              tags:
                - rhoe_ec2_idm
          vars:
            stage: aws_infra

        - name: RHOE - EC2 - Bastion | AWS Infrastructure
          when: (deploy_bastion is defined) and deploy_bastion | bool
          ansible.builtin.include_role:
            name: "rhoe-ec2-bastion"
            apply:
              tags:
                - rhoe_ec2_bastion
          vars:
            stage: aws_infra


        - name: RHOE - EC2 - Gitlab | AWS Infrastructure
          when: (deploy_gitlab is defined) and deploy_gitlab | bool
          ansible.builtin.include_role:
            name: "rhoe-ec2-gitlab"
            apply:
              tags:
                - rhoe_ec2_gitlab
          vars:
            stage: aws_infra

# ============================================================
# Per-Workload Configuration - IDM
# ============================================================
- name: RHOE - EC2 - IDM | Configure
  hosts: idm
  become: true
  gather_facts: false
  vars:
    action: deploy # deploy or destroy
  tasks:

    - name: RHOE - EC2 - IDM | Configure
      ansible.builtin.include_role:
        name: "rhoe-ec2-idm"
      vars:
        stage: configure
      tags:
        - rhoe_ec2_idm
        - configure

# ============================================================
# Per-Workload Configuration - Bastion
# ============================================================
- name: RHOE - EC2 - Bastion | Configure
  hosts: bastion
  become: true
  gather_facts: false
  vars:
    action: deploy # deploy or destroy
  tasks:
    - name: RHOE - EC2 - Bastion | Configure
      when: deploy_bastion is defined and deploy_bastion | bool
      ansible.builtin.include_role:
        name: "rhoe-ec2-bastion"
      vars:
        stage: configure
      tags:
        - rhoe_ec2_bastion
        - configure

# ============================================================
# Per-Workload Configuration - Gitlab
# ============================================================
- name: RHOE - EC2 - Gitlab | Configure
  hosts: gitlab
  become: true
  gather_facts: false
  vars:
    action: deploy # deploy or destroy
  tasks:
    - name: RHOE - EC2 - Gitlab | Configure
      ansible.builtin.include_role:
        name: "rhoe-ec2-gitlab"
      vars:
        stage: configure
      tags:
        - rhoe_ec2_gitlab
        - configure

# ============================================================
# Per-Workload Configuration - OCP4 IPI
# ============================================================
- name: RHOE - EC2 - OCP | Configure
  hosts: bastion
  become: true
  gather_facts: false
  vars:
    action: deploy # deploy or destroy
  tasks:

    - name: RHOE - EC2 - OCP4 | Configure
      when: deploy_ocp4 is defined and deploy_ocp4 | bool
      ansible.builtin.include_role:
        name: "rhoe-aws-ocp4-ipi"
      vars:
        stage: configure
        aws_key: "{{ target_aws_access_key }}"
        aws_secret: "{{ target_aws_access_secret }}"
      no_log: true
