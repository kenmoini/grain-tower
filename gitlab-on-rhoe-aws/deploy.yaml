---
- name: Deploy GitLab on Red Hat Open Environments, AWS
  hosts: localhost
  gather_facts: false

  tasks:
  
  - name: Include shared vars
    include_vars: vars.yaml

  - name: Set preflight facts for current working directory
    set_fact:
      cwd: "{{ playbook_dir.split('/') }}"

  - name: Set preflight facts for roles
    set_fact:
      nu_roles_path: "{{ cwd[:-1] | join('/') }}/roles"
  
  - name: Include shared vars
    include_vars: vars.yaml

  - name: Scope RHOE AWS Environment
    include_role:
      name: "{{nu_roles_path }}/scope-rhoe-aws"

  #======================================================================== AWS INFRASTRUCTURE

  - name: Create EC2 Key Pair from Public Key Input
    amazon.aws.ec2_key:
      region: "{{ aws_region }}"
      name: "{{ gitlab_keypair_name }}"
      key_material: "{{ gitlab_ec2_keypair }}"

  - name: Create GitLab Security Group
    amazon.aws.ec2_group:
      name: gitlab-sg
      description: A Security Group for GitLab
      vpc_id: "{{ aws_vpc_id }}"
      region: "{{ aws_region }}"
      rules:
        - proto: tcp
          ports:
            - 22
            - 80
            - 443
            - 5000
            - 5001
            - 5002
            - 5003
            - 5004
            - 5005
            - 8080
          cidr_ip: 0.0.0.0/0
        - proto: udp
          ports:
            - 5000
            - 5001
            - 5002
            - 5003
            - 5004
            - 5005
          cidr_ip: 0.0.0.0/8
      rules_egress:
        - proto: tcp
          from_port: 0
          to_port: 65535
          cidr_ip: 0.0.0.0/0
        - proto: udp
          from_port: 0
          to_port: 65535
          cidr_ip: 0.0.0.0/0
      tags:
        guid: "{{ rhoe_guid }}"
        owner: "{{ rhoe_email_owner }}"
        email: "{{ rhoe_email_owner }}"
        deployer: grain-tower

  - name: Find RHEL AMI
    amazon.aws.ec2_ami_facts:
      region: "{{ aws_region }}"
      owners: 309956199498
      filters:
        name: "RHEL*8.4*x86_64*"
    register: rhel_ami

  - name: Create EC2 Instance for GitLab Server
    amazon.aws.ec2:
      region: "{{ aws_region }}"
      key_name: "{{ gitlab_keypair_name }}"
      instance_type: "{{ gitlab_ec2_instance_type }}"
      image: "{{ (rhel_ami.images | selectattr('name', 'defined') | sort(attribute='creation_date') | last).image_id }}"
      wait: yes
      vpc_subnet_id: "{{ aws_subnet_id }}"
      assign_public_ip: yes
      group: gitlab-sg
      exact_count: 1
      count_tag:
        Name: gitlab
      instance_tags:
        guid: "{{ rhoe_guid }}"
        owner: "{{ rhoe_email_owner }}"
        email: "{{ rhoe_email_owner }}"
        Name: "{{ gitlab_hostname }}"
        base_domain: "{{ aws_guid_public_zone_name }}"
        deployer: grain-tower
    register: aws_ec2_instance

  - name: Set fact for Route53 entries
    set_fact:
      r53_records:
        - name: "{{ gitlab_hostname }}.{{ aws_guid_public_zone_name }}"
          type: A
          ttl: 300
          value: "{{ aws_ec2_instance.tagged_instances[0].public_ip }}"
        - name: "*.{{ gitlab_hostname }}.{{ aws_guid_public_zone_name }}"
          type: A
          ttl: 300
          value: "{{ aws_ec2_instance.tagged_instances[0].public_ip }}"
    
  - name: Create Route53 A Record Entries for GitLab
    community.aws.route53:
      state: present
      zone: "{{ aws_guid_public_zone_name }}"
      record: "{{ record_item.name }}"
      type: "{{ record_item.type }}"
      ttl: "{{ record_item.ttl }}"
      value: "{{ record_item.value }}"
      overwrite: yes
    loop: "{{ r53_records }}"
    loop_control:
      loop_var: record_item
    when: (record_item.type == "A")

  - name: Add the new GitLab Host to a new inventory
    add_host:
      hostname: '{{ aws_ec2_instance.tagged_instances[0].public_ip }}'
      groups:
      - gitlab
      ansible_user: ec2-user
      ansible_connection: ssh
      ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
      ansible_python_interpreter: "/usr/libexec/platform-python"
      aws_guid_public_zone_name: "{{ aws_guid_public_zone_name }}"
      rhoe_email_owner: "{{ rhoe_email_owner }}"

- name: Configure GitLab Server
  hosts: gitlab
  become: yes
  gather_facts: false
  tasks:
  
    - name: Include shared vars
      include_vars: vars.yaml
      
    - name: Kick off configuration
      include_tasks: configure.yaml